<?php

namespace Savvy\PagesBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Savvy\PagesBundle\Utility\Utility;

/**
 * PageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PageRepository extends EntityRepository
{

    public function getChildIds($page, $site_id)
    {
        return $this->createQueryBuilder('p')
                ->select('p.id')
                ->where('p.lft > :lft AND p.rght < :rght AND p.site = :site_id')
                ->setParameters(array('site_id' => $site_id, 'lft' => $page->getLft(), 'rght' => $page->getRght()))
                ->getQuery()
                ->getArrayResult();
    }

    public function getPagesArray($site)
    {
        return $this->getPagesQuery($site)->getArrayResult();
    }

    public function getPagesObject($site)
    {
        return $this->getPagesQuery($site)->getResult();
    }

    public function getPageBySlug($slug, $site_id)
    {
        $query = $this->createQueryBuilder('p')
            ->leftJoin('p.parent', 'pp')
            ->leftJoin('p.children', 'c');
        if ($slug !== NULL) {
            $query->where('p.slug = :slug AND p.site = :site_id AND pp.lft = :one')
                ->setParameters(array('site_id' => $site_id, 'slug' => $slug, 'one' => 1));
        } else {
            $query->where('pp.id IS NULL AND p.site = :site_id')
                ->setParameter('site_id', $site_id);
        }
        return $query->setMaxResults(1)
                ->orderBy('p.lft')
                ->getQuery()
                ->getOneOrNullResult();
    }

    private function getPagesQuery($site)
    {
        return $this->createQueryBuilder('p')
                ->leftJoin('p.parent', 'pp')
                ->leftJoin('p.children', 'c')
                ->where('p.site = :site')
                ->setParameter('site', $site)
                ->orderBy('p.lft', 'ASC')
                ->getQuery();
    }

}